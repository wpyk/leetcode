# 169. Majority Element

## Description

Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.

You may assume that the array is non-empty and the majority element always exist in the array.
### Example
Input: [3,2,3]  
Output: 3

Input: [2,2,1,1,1,2,2]  
Output: 2
### tag 
counting

### Note/思路/考え方
这道题可以用一个非常简单的“举手投票”法进行求解。思路非常清晰，先从给定的数组中拿出一个数，记录该数为num，然后记录其票数为count = 1. 遍历数组，遇到与其相同的书，就增加其票数(count ++)，与其不同的话，就减少票数。当票数归零的时候，更新num为当前的index的位置的数字，开始继续之前的循环。这样做一定能够找出数组的众数，因为它能够得到的票数是>n/2的。
```java
    class Solution {
	    public int majorityElement(int[] nums) {
	        int num = 0;
	        int count = 0;
	        
	        for(int i = 0; i < nums.length; i++){
	            if(count == 0){
	                num = nums[i];
	                count ++;
	            }else if(nums[i] == num){
	                count ++;
	            }else if(nums[i] != num){
	                count --;
	            }
	        }
	        
	        return num;
	    }
    }
```